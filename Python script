import re
import csv
from collections import Counter, defaultdict

# Define file paths
LOG_FILE = "sample.log"
OUTPUT_FILE = "log_analysis_results.csv"

# Configurable threshold for failed login attempts
FAILED_LOGIN_THRESHOLD = 10

def parse_log_file(file_path):
    """Parse the log file and extract relevant data."""
    ip_requests = Counter()
    endpoint_requests = Counter()
    failed_logins = defaultdict(int)

    with open(file_path, "r") as file:
        for line in file:
            # Extract IP address
            ip_match = re.match(r"(\d+\.\d+\.\d+\.\d+)", line)
            if ip_match:
                ip = ip_match.group(1)
                ip_requests[ip] += 1

            # Extract endpoint and status code
            endpoint_match = re.search(r'\"(?:GET|POST) (.+?) HTTP', line)
            status_code_match = re.search(r'HTTP\/1\.1" (\d+)', line)

            if endpoint_match and status_code_match:
                endpoint = endpoint_match.group(1)
                status_code = int(status_code_match.group(1))
                endpoint_requests[endpoint] += 1

                # Detect failed logins
                if status_code == 401 or "Invalid credentials" in line:
                    failed_logins[ip] += 1

    return ip_requests, endpoint_requests, failed_logins

def write_to_csv(ip_requests, most_accessed, failed_logins, output_file):
    """Write the analysis results to a CSV file."""
    with open(output_file, mode="w", newline="") as file:
        writer = csv.writer(file)

        # Write Requests per IP
        writer.writerow(["Requests per IP"])
        writer.writerow(["IP Address", "Request Count"])
        for ip, count in ip_requests.items():
            writer.writerow([ip, count])
        writer.writerow([])

        # Write Most Accessed Endpoint
        writer.writerow(["Most Accessed Endpoint"])
        writer.writerow(["Endpoint", "Access Count"])
        writer.writerow([most_accessed[0], most_accessed[1]])
        writer.writerow([])

        # Write Suspicious Activity
        writer.writerow(["Suspicious Activity"])
        writer.writerow(["IP Address", "Failed Login Count"])
        for ip, count in failed_logins.items():
            if count > FAILED_LOGIN_THRESHOLD:
                writer.writerow([ip, count])

def display_results(ip_requests, most_accessed, failed_logins):
    """Display the results in a clear and formatted manner on the terminal."""
    print("\nRequests per IP:")
    print(f"{'IP Address':<20}{'Request Count'}")
    print("-" * 30)
    for ip, count in ip_requests.most_common():
        print(f"{ip:<20}{count}")

    print("\nMost Frequently Accessed Endpoint:")
    print(f"{most_accessed[0]} (Accessed {most_accessed[1]} times)")

    print("\nSuspicious Activity Detected:")
    print(f"{'IP Address':<20}{'Failed Login Count'}")
    print("-" * 30)
    for ip, count in failed_logins.items():
        if count > FAILED_LOGIN_THRESHOLD:
            print(f"{ip:<20}{count}")

def main():
    # Process the log file
    ip_requests, endpoint_requests, failed_logins = parse_log_file(LOG_FILE)

    # Identify the most accessed endpoint
    most_accessed = endpoint_requests.most_common(1)[0]

    # Display results
    display_results(ip_requests, most_accessed, failed_logins)

    # Write results to CSV
    write_to_csv(ip_requests, most_accessed, failed_logins, OUTPUT_FILE)
    print(f"\nResults saved to {OUTPUT_FILE}")

if __name__ == "__main__":
    main()
